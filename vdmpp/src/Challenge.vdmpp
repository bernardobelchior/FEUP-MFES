class Challenge
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
	public name: seq of char;
	public description: seq of char;
	public startDate: Types`Date;
	public endDate: Types`Date;
	public goal: real;

	protected createdBy: Admin;
	private completed: seq of User := [];
operations
	public verifyChallenge: Workout ==> bool
	verifyChallenge(-) == is subclass responsibility;
	
	public printMessage: () ==> seq of char
	printMessage() == is subclass responsibility;

	public addCompletedUser: User ==> ()
	addCompletedUser(u) == (completed := [u] ^ completed)
	post completed = [u] ^ completed~;
			
	public getCompleted: () ==> seq of User
	getCompleted() == return completed;	
	
	public getCreator: () ==> Admin
	getCreator() == return createdBy;
	
	public getName: () ==> seq of char
	getName() == return name;
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Challenge