class Challenge
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
	public name: seq of char;
	public description: seq of char;
	public startDate: Types`Date;
	public endDate: Types`Date;
	private completed: seq of User := [];
	public goal: real;
operations
	public Challenge: seq of char * seq of char * Types`Date * Types`Date * real ==> Challenge 
	Challenge(n, d, s, e, g) == (
		name := n;
		description := d;
		startDate := s;
		endDate := e;
		goal := g;
	)
	post name = n and description = d and startDate = s and endDate = e and goal = g;

	public verifyChallenge: Workout ==> bool
	verifyChallenge(-) == is subclass responsibility;

	public addCompletedUser: User ==> ()
	addCompletedUser(u) == (completed := [u] ^ completed)
	post completed = [u] ^ completed~;
			
	public getCompleted: () ==> seq of User
	getCompleted() == return completed;	
	
	public getName: () ==> seq of char
	getName() == return name;
	
	public getGoal: () ==> real
	getGoal() == return goal;
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Challenge