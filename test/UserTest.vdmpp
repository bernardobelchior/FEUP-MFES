class UserTest is subclass of Test
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
operations
	public createUser() res: User ==
		return new User("Bernardo", "Belchior", "up201405381@fe.up.pt", "12345678");	

	public testUser() == (
		dcl u: User := createUser();
		u.weight := 90;
		u.height := 1.20;
		assert(u.getFirstName() = "Bernardo");
		assert(u.getLastName() = "Belchior");
		assert(u.getEmail() = "up201405381@fe.up.pt");
		assert(u.getPassword() = "12345678");
		assert(u.weight = 90);
		assert(u.height = 1.20);
	);

	public testAddRoute() == (
		dcl u: User := createUser();
		dcl r: Route := new Route("Sunday Run", [mk_Types`Point(0, 0)]);
		u.addRoute(r);
		assert(r in set u.getMyRoutes());
	);
	
	public testAddWorkout() == (
		dcl u: User := createUser();
		dcl w: Workout := new Workout("Morning Run", mk_Types`DateTime(mk_Types`Date(2017,12,21), mk_Types`Time(16, 37, 00)), <Running>, mk_Types`Point(0, 0));
		u.addWorkout(w);
		assert(w in set u.getWorkouts());
	);
	
	public testAddFriend() == (
		dcl u1: User := createUser();
		dcl u2: User := new User("Nuno", "Ramos", "a@b.c", "12345678");
		u1.addFriend(u2);
		assert(u2 in set u1.getFriends());
	);
	
	public testAddGoal() == (
		dcl u: User := createUser();
		dcl g: Goal := new Goal(10.2);
		u.addGoal(g);
		assert(g in set u.getGoals());
	);
	
	public testLoginSuccess() == (
		dcl u: User := createUser();
		assert(u.checkLogin("up201405381@fe.up.pt", "12345678"));
	);

	public testLoginFailure() == (
		dcl u: User := createUser();
		assert(not u.checkLogin("invalid", "invalid"));
	);
	
	public test() == (
		testUser();
		testAddRoute();	
		testAddWorkout();
		testAddFriend();	
		testAddGoal();
		testLoginSuccess();
		testLoginFailure();
	);
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end UserTest